{
  "companyId": "e96fc8d1-793e-48ed-98a1-2f4356adeaad",
  "authTokenExpireIds": [],
  "connectorIds": [
    "functionsConnector",
    "pingOneMfaConnector",
    "annotationConnector",
    "flowConnector",
    "httpConnector",
    "challengeConnector",
    "nodeConnector",
    "variablesConnector"
  ],
  "createdDate": 1671630463002,
  "currentVersion": 264,
  "customerId": "ab7d566d93c42380f27682b13a857079",
  "deployedDate": 1671684675764,
  "description": "",
  "flowStatus": "enabled",
  "inputSchemaCompiled": {
    "parameters": {
      "type": "object",
      "properties": {
        "deviceAuthNId": {
          "description": "Device AuthN ID",
          "preferredDataType": "string",
          "isExpanded": true,
          "type": "string",
          "name": "deviceAuthNId"
        },
        "publicKeyCredentialRequestOptions": {
          "description": "Public Key Credential Request Options",
          "preferredDataType": "string",
          "isExpanded": true,
          "type": "string",
          "name": "publicKeyCredentialRequestOptions"
        },
        "fidoDevice": {
          "description": "FIDO Device",
          "preferredDataType": "object",
          "isExpanded": true,
          "type": "object",
          "name": "fidoDevice"
        }
      },
      "additionalProperties": false,
      "required": [
        "deviceAuthNId",
        "publicKeyCredentialRequestOptions",
        "fidoDevice"
      ]
    }
  },
  "isInputSchemaSaved": true,
  "name": "CIAM-Passwordless-002-AuthN-FIDO",
  "publishedVersion": 264,
  "settings": {
    "csp": "worker-src 'self' blob:; script-src 'self' https://cdn.jsdelivr.net https://code.jquery.com https://devsdk.singularkey.com http://cdnjs.cloudflare.com 'unsafe-inline' 'unsafe-eval';",
    "intermediateLoadingScreenCSS": "",
    "intermediateLoadingScreenHTML": "",
    "cssLinks": [],
    "useCustomCSS": false,
    "useBetaAlgorithm": true,
    "flowTimeoutInSeconds": 40001,
    "logLevel": 3
  },
  "updatedDate": 1671684675765,
  "flowId": "22f6478fdab1a4ff6d9d54d996c5274f",
  "graphData": {
    "elements": {
      "nodes": [
        {
          "data": {
            "id": "tc7d03kha7",
            "nodeType": "CONNECTION",
            "connectionId": "de650ca45593b82c49064ead10b9fe17",
            "connectorId": "functionsConnector",
            "name": "Functions",
            "label": "Functions",
            "status": "configured",
            "capabilityName": "AEqualsMultipleB",
            "type": "trigger",
            "properties": {
              "leftValueA": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"moustache\",\n        \"data\": \"{{global.parameters.fidoDevice.platform}}\",\n        \"name\": \"platform\",\n        \"children\": [\n          {\n            \"text\": \"\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "rightValueMultiple": {
                "value": [
                  {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"IOS\"\n      }\n    ]\n  }\n]",
                    "id": "888yeo8ej3"
                  },
                  {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"ANDROID\"\n      }\n    ]\n  }\n]",
                    "id": "c5fct8d1a9"
                  },
                  {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"MAC\"\n      }\n    ]\n  }\n]",
                    "id": "n2smfzia9s"
                  }
                ]
              },
              "nodeTitle": {
                "value": "Device Platform"
              }
            },
            "idUnique": "gxtru71xbc"
          },
          "position": {
            "x": 554,
            "y": 574
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "cc4etq8uhs",
            "nodeType": "CONNECTION",
            "connectionId": "1788632bf2a3027ea8567f634ad68297",
            "connectorId": "pingOneMfaConnector",
            "name": "PingOne MFA",
            "label": "PingOne MFA",
            "status": "configured",
            "capabilityName": "validateAssertionDeviceAuthentication",
            "properties": {
              "userId": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"variable.svg\",\n        \"url\": \"p1UserId\",\n        \"data\": \"{{global.variables.p1UserId}}\",\n        \"tooltip\": \"{{global.variables.p1UserId}}\",\n        \"children\": [\n          {\n            \"text\": \"p1UserId\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "status": {
                "value": "ACTIVE"
              },
              "authTemplateName": {
                "value": "STRONG_AUTHENTICATION"
              },
              "userAgent": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"auth.svg\",\n        \"url\": \"userAgent\",\n        \"data\": \"{{global.userAgent}}\",\n        \"tooltip\": \"{{global.userAgent}}\",\n        \"children\": [\n          {\n            \"text\": \"userAgent\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "deviceId": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"http.svg\",\n        \"url\": \"buttonValue\",\n        \"data\": \"{{local.94f2zul0tb.payload.output.buttonValue}}\",\n        \"tooltip\": \"{{local.94f2zul0tb.payload.output.buttonValue}}\",\n        \"children\": [\n          {\n            \"text\": \"buttonValue\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "deviceAuthenticationId": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"auth.svg\",\n        \"url\": \"deviceAuthNId\",\n        \"data\": \"{{global.parameters.deviceAuthNId}}\",\n        \"tooltip\": \"{{global.parameters.deviceAuthNId}}\",\n        \"children\": [\n          {\n            \"text\": \"deviceAuthNId\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "assertion": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"teleport.svg\",\n        \"url\": \"assertionValue\",\n        \"data\": \"{{local.rvp5w0bzvj.payload.output.assertionValue}}\",\n        \"tooltip\": \"{{local.rvp5w0bzvj.payload.output.assertionValue}}\",\n        \"children\": [\n          {\n            \"text\": \"assertionValue\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "origin": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"https://\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"moustache\",\n        \"data\": \"{{global.parameters.fidoDevice.rp.id}}\",\n        \"name\": \"id\",\n        \"children\": [\n          {\n            \"text\": \"\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              }
            },
            "idUnique": "a5v7zcchqt"
          },
          "position": {
            "x": 547,
            "y": 1650
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "szv1jn92pp",
            "nodeType": "EVAL",
            "properties": {
              "epxaef0sr1": {
                "value": "allTriggersFalse"
              },
              "rbd1yvysmr": {
                "value": "allTriggersFalse"
              },
              "0onbzymzwb": {
                "value": "anyTriggersFalse"
              }
            }
          },
          "position": {
            "x": 667,
            "y": 1650
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "jqwp06o8gw",
            "nodeType": "EVAL",
            "properties": {
              "rbd1yvysmr": {
                "value": "allTriggersFalse"
              },
              "gppw2v80jd": {
                "value": "allTriggersFalse"
              },
              "fwepxtly85": {
                "value": "allTriggersTrue"
              },
              "qt6i45kia9": {
                "value": "allTriggersTrue"
              },
              "9vn63t3qba": {
                "value": "allTriggersFalse"
              }
            }
          },
          "position": {
            "x": 1184,
            "y": 544
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "x2r6shu3pp",
            "nodeType": "ANNOTATION",
            "name": "Annotation",
            "connectionId": "eoKSh9tBRPMcY2QMB87cB9RDMKsKJeaY",
            "connectorId": "annotationConnector",
            "capabilityName": "updateAnnotationProperties",
            "type": "action",
            "properties": {
              "backgroundColor": {
                "value": "#e7e7e7ff"
              },
              "annotation": {
                "value": "Biometric use registered and device was identified"
              },
              "annotationTextColor": {
                "value": "#000000ff"
              },
              "strokeEnabled": {
                "value": true
              },
              "strokeWidth": {
                "value": 1
              },
              "strokeColor": {
                "value": "#000000ff"
              },
              "cornerRadius": {
                "value": 5
              },
              "fontSize": {
                "value": 13
              },
              "fontFamily": {
                "value": "Verdana"
              },
              "width": {
                "value": 450
              }
            },
            "status": "configured"
          },
          "position": {
            "x": 2347,
            "y": 810
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "fwepxtly85",
            "nodeType": "CONNECTION",
            "connectionId": "24785f80baf404bdbc22086f3ac84028",
            "connectorId": "flowConnector",
            "name": "Flow",
            "label": "Flow",
            "status": "configured",
            "capabilityName": "oobStart",
            "properties": {
              "generateQr": {
                "value": true
              },
              "challengeLength": {
                "value": 32
              },
              "nodeTitle": {
                "value": "Desktop - QR Code"
              }
            },
            "idUnique": "cjkm566c1g"
          },
          "position": {
            "x": 1507,
            "y": 540
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "qt6i45kia9",
            "nodeType": "CONNECTION",
            "connectionId": "24785f80baf404bdbc22086f3ac84028",
            "connectorId": "flowConnector",
            "name": "Flow",
            "label": "Flow",
            "status": "configured",
            "capabilityName": "oobContinue",
            "properties": {
              "connectionInstanceId": {},
              "nodeTitle": {
                "value": "OOB Continue Mobile"
              }
            },
            "idUnique": "y0nms32koi"
          },
          "position": {
            "x": 1507,
            "y": 930
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "cllf2xf9xs",
            "nodeType": "EVAL",
            "properties": {
              "z11lytu860": {
                "value": "anyTriggersFalse"
              }
            }
          },
          "position": {
            "x": 1627,
            "y": 540
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "b4j5so66yk",
            "nodeType": "EVAL",
            "properties": {
              "1i38tbxf0f": {
                "value": "allTriggersFalse"
              },
              "7yjnxene5s": {
                "value": "allTriggersFalse"
              },
              "pnqn79iv6i": {
                "value": "allTriggersFalse"
              },
              "ku9d05yy7o": {
                "value": "allTriggersFalse"
              },
              "rx9iwmkeeb": {
                "value": "allTriggersFalse"
              },
              "k0u00birhq": {
                "value": "anyTriggersFalse"
              }
            }
          },
          "position": {
            "x": 1927,
            "y": 930
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "ky5gtbz1ua",
            "nodeType": "CONNECTION",
            "connectionId": "867ed4363b2bc21c860085ad2baa817d",
            "connectorId": "httpConnector",
            "name": "Http",
            "label": "Http",
            "status": "configured",
            "capabilityName": "customHTMLTemplate",
            "type": "trigger",
            "properties": {
              "undefined": {
                "value": null
              },
              "customHTML": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"<div class=\\\"signin\\\">\\n    <h1>Sign In with Device Passkey</h1>\\n    <p class=\\\"message\\\">Click button and follow instructions to sign in with you mobile biometrics.</p>\\n    <button id=\\\"fidoButton\\\" class=\\\"fidoBtn\\\">Sign In with Passkey</button>\\n    <div data-skcomponent=\\\"skerror\\\" class=\\\"error-message\\\" data-skvisibility=\\\"\\\"></div>\\n</div>\\n\\n\\n<form id=\\\"assertionForm\\\" method=\\\"post\\\">\\n        <!-- IMPORTANT: This form contains 2 hidden fields to:\\n                1) ASSERTION VALUE to care the fido assertion from the device\\n                2) ASSERTION BUTTON which will be use to submit the form after \\n                   the assertion is set-->\\n        <div id=\\\"hiddenDiv\\\" style=\\\"display: none\\\">\\n                <input id=\\\"assertionValue\\\" type=\\\"hidden\\\" name=\\\"assertionValue\\\" />\\n                <button id=\\\"assertionButton\\\"\\n                        data-skcomponent=\\\"skbutton\\\"\\n                        data-skbuttontype=\\\"form-submit\\\"\\n                        data-skbuttonvalue=\\\"submit\\\"\\n                        data-skform=\\\"assertionForm\\\" >Next</button>\\n        </div>\\n</form>\\n\"\n      }\n    ]\n  }\n]"
              },
              "customScript": {
                "value": "var authAbortController = window.PublicKeyCredential ? new AbortController() : null;\nvar authAbortSignal = window.PublicKeyCredential ? authAbortController.signal : null;\n\nwindow.abortWebAuthnSignal = function abortWebAuthnSignal()\n{\n    authAbortController.abort();\n    authAbortController = new AbortController();\n    authAbortSignal = authAbortController.signal;\n}\n\nwindow.IsWebAuthnSupported = function IsWebAuthnSupported()\n{\n    if (!window.PublicKeyCredential)\n    {\n            console.log(\"Web Authentication API is not supported on this browser.\");\n            return false;\n    }\n    return true;\n}\n\nwindow.isWebAuthnPlatformAuthenticatorAvailable = function isWebAuthnPlatformAuthenticatorAvailable() {\n    var timer;\n    var p1 = new Promise(function(resolve) {\n            timer = setTimeout(function() {\n                    resolve(false);\n            }, 1000);\n    });\n    var p2 = new Promise(function(resolve) {\n            if (IsWebAuthnSupported() && window.PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable) {\n                    resolve(\n                            window.PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable().catch(function(err) {\n                                    console.log(err);\n                                    return false;\n                            }));\n            }\n            else {\n                    resolve(false);\n            }\n    });\n    return Promise.race([p1, p2]).then(function (res) {\n            clearTimeout(timer);\n            return res;\n    });\n}\nwindow.WebAuthnPlatformAuthentication = function WebAuthnPlatformAuthentication(publicKeyCredentialRequestOptions) {\n    return new Promise(function(resolve, reject) {\n            isWebAuthnPlatformAuthenticatorAvailable().then(function (result) {\n                    if (result) {\n                            resolve(Authenticate(publicKeyCredentialRequestOptions));\n                    }\n                    reject(Error(\"UnSupportedBrowserError\"));\n            });\n    });\n}\nfunction Authenticate(publicKeyCredentialRequestOptions) {\n    return new Promise(function(resolve, reject) {\n            var options = JSON.parse(publicKeyCredentialRequestOptions);\n            var publicKeyCredential = {};\n            publicKeyCredential.challenge = new Uint8Array(options.challenge);\n            if ('allowCredentials' in options) {\n                    publicKeyCredential.allowCredentials = credentialListConversion(options.allowCredentials);\n            }\n            if ('rpId' in options) {\n                    publicKeyCredential.rpId = options.rpId;\n            }\n            if ('timeout' in options) {\n                    publicKeyCredential.timeout = options.timeout;\n            }\n            if ('userVerification' in options) {\n                    publicKeyCredential.userVerification = options.userVerification;\n            }\n            navigator.credentials.get({\"publicKey\": publicKeyCredential})\n                    .then(function (assertion) {\n                            // Send new credential info to server for verification and registration.\n                            var publicKeyCredential = {};\n                            if ('id' in assertion) {\n                                    publicKeyCredential.id = assertion.id;\n                            }\n                            if ('rawId' in assertion) {\n                                    publicKeyCredential.rawId = toBase64Str(assertion.rawId);\n                            }\n                            if ('type' in assertion) {\n                                    publicKeyCredential.type = assertion.type;\n                            }\n                            var response = {};\n                            response.clientDataJSON = toBase64Str(assertion.response.clientDataJSON);\n                            response.authenticatorData = toBase64Str(assertion.response.authenticatorData);\n                            response.signature = toBase64Str(assertion.response.signature);\n                            response.userHandle = toBase64Str(assertion.response.userHandle);\n                            publicKeyCredential.response = response;\n                            resolve(JSON.stringify(publicKeyCredential));\n                            document.getElementById(\"assertionValue\").value = JSON.stringify(publicKeyCredential);\n                            \n                            document.getElementById('assertionButton').click();\n                    }).catch(function (err) {\n                            // No acceptable authenticator or user refused consent. Cancel authentication\n                            // if this is the only device so we don't loop\n                            console.log(\"No acceptable authenticator or user refused consent\");\n\n            });\n    });\n}\nfunction credentialListConversion(list) {\n    var credList = [];\n    for (var i=0; i < list.length; i++) {\n            var cred = {\n                    type: list[i].type,\n                    id: new Uint8Array(list[i].id)\n            };\n            if (list[i].transports) {\n                    cred.transports = list[i].transports;\n            }\n            credList.push(cred);\n    }\n    return credList;\n}\nfunction toBase64Str(bin){\n    return btoa(String.fromCharCode.apply(null, new Uint8Array(bin)));\n}\n\nconst fidoButton = document.getElementById(\"fidoButton\");\nfidoButton.addEventListener(\"click\", startFido);\nfunction startFido() {  \n    Authenticate('{{global.parameters.publicKeyCredentialRequestOptions}}');\n}"
              },
              "nodeTitle": {
                "value": "Mobile FIDO AuthN"
              },
              "formFieldsList": {
                "value": [
                  {
                    "propertyName": "assertionValue",
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "value": "",
                    "hashedVisibility": false,
                    "displayName": "assertionValue"
                  },
                  {
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "propertyName": "buttonValue"
                  }
                ]
              },
              "sktemplate": {
                "customerId": "50a0de8b585e95ff04f40f30f8ffd219",
                "visibility": "private",
                "version": "1.0",
                "name": "Fido screen authentication - meirav",
                "description": "",
                "createdDate": 1641305537589,
                "inputSchema": "{\n\"type\": \"object\",\n   \"properties\": {\n      \"type\": {\n        \"displayName\": \"device type\",\n\t\t\t\"preferedControlType\": \"textField\",\n            \"enableParameters\": true\n      },\n      \"publicKeyCredentialCreationOptions\": {\n        \"displayName\": \"credentials\",\n\t\t\t\"preferedControlType\": \"textField\",\n            \"enableParameters\": true\n      },\n      \"hasDeviceSelectionScreen\": {\n        \"displayName\": \"show back button\",\n\t\t\t\"preferedControlType\": \"textField\",\n            \"enableParameters\": true\n      },\n       \"generatedQr\": {\n        \"displayName\": \"generatedQr\",\n\t\t\"preferedControlType\": \"textField\",\n       \"enableParameters\": true    \n      }\n   }\n}",
                "outputSchema": "{\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"buttonValue\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"propertyName\": \"buttonValue\"\n\t\t},\n\t\t\"assertionValue\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"propertyName\": \"assertionValue\"\n\t\t}\n\t}\n}",
                "script": "var authAbortController = window.PublicKeyCredential ? new AbortController() : null;\nvar authAbortSignal = window.PublicKeyCredential ? authAbortController.signal : null;\n\nwindow.abortWebAuthnSignal = function abortWebAuthnSignal()\n{\n    authAbortController.abort();\n    authAbortController = new AbortController();\n    authAbortSignal = authAbortController.signal;\n}\n\nwindow.IsWebAuthnSupported = function IsWebAuthnSupported()\n{\n    if (!window.PublicKeyCredential)\n    {\n            console.log(\"Web Authentication API is not supported on this browser.\");\n            return false;\n    }\n    return true;\n}\n\nwindow.isWebAuthnPlatformAuthenticatorAvailable = function isWebAuthnPlatformAuthenticatorAvailable() {\n    var timer;\n    var p1 = new Promise(function(resolve) {\n            timer = setTimeout(function() {\n                    resolve(false);\n            }, 1000);\n    });\n    var p2 = new Promise(function(resolve) {\n            if (IsWebAuthnSupported() && window.PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable) {\n                    resolve(\n                            window.PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable().catch(function(err) {\n                                    console.log(err);\n                                    return false;\n                            }));\n            }\n            else {\n                    resolve(false);\n            }\n    });\n    return Promise.race([p1, p2]).then(function (res) {\n            clearTimeout(timer);\n            return res;\n    });\n}\nwindow.WebAuthnPlatformAuthentication = function WebAuthnPlatformAuthentication(publicKeyCredentialRequestOptions) {\n    return new Promise(function(resolve, reject) {\n            isWebAuthnPlatformAuthenticatorAvailable().then(function (result) {\n                    if (result) {\n                            resolve(Authenticate(publicKeyCredentialRequestOptions));\n                    }\n                    reject(Error(\"UnSupportedBrowserError\"));\n            });\n    });\n}\nfunction Authenticate(publicKeyCredentialRequestOptions) {\n    return new Promise(function(resolve, reject) {\n            var options = JSON.parse(publicKeyCredentialRequestOptions);\n            var publicKeyCredential = {};\n            publicKeyCredential.challenge = new Uint8Array(options.challenge);\n            if ('allowCredentials' in options) {\n                    publicKeyCredential.allowCredentials = credentialListConversion(options.allowCredentials);\n            }\n            if ('rpId' in options) {\n                    publicKeyCredential.rpId = options.rpId;\n            }\n            if ('timeout' in options) {\n                    publicKeyCredential.timeout = options.timeout;\n            }\n            if ('userVerification' in options) {\n                    publicKeyCredential.userVerification = options.userVerification;\n            }\n            navigator.credentials.get({\"publicKey\": publicKeyCredential})\n                    .then(function (assertion) {\n                            // Send new credential info to server for verification and registration.\n                            var publicKeyCredential = {};\n                            if ('id' in assertion) {\n                                    publicKeyCredential.id = assertion.id;\n                            }\n                            if ('rawId' in assertion) {\n                                    publicKeyCredential.rawId = toBase64Str(assertion.rawId);\n                            }\n                            if ('type' in assertion) {\n                                    publicKeyCredential.type = assertion.type;\n                            }\n                            var response = {};\n                            response.clientDataJSON = toBase64Str(assertion.response.clientDataJSON);\n                            response.authenticatorData = toBase64Str(assertion.response.authenticatorData);\n                            response.signature = toBase64Str(assertion.response.signature);\n                            response.userHandle = toBase64Str(assertion.response.userHandle);\n                            publicKeyCredential.response = response;\n                            resolve(JSON.stringify(publicKeyCredential));\n                            document.getElementById(\"assertionValue\").value = JSON.stringify(publicKeyCredential);\n                            \n                            document.getElementById('assertionButton').click();\n                    }).catch(function (err) {\n                            // No acceptable authenticator or user refused consent. Cancel authentication\n                            // if this is the only device so we don't loop\n                            console.log(\"No acceptable authenticator or user refused consent\");\n\n            });\n    });\n}\nfunction credentialListConversion(list) {\n    var credList = [];\n    for (var i=0; i < list.length; i++) {\n            var cred = {\n                    type: list[i].type,\n                    id: new Uint8Array(list[i].id)\n            };\n            if (list[i].transports) {\n                    cred.transports = list[i].transports;\n            }\n            credList.push(cred);\n    }\n    return credList;\n}\nfunction toBase64Str(bin){\n    return btoa(String.fromCharCode.apply(null, new Uint8Array(bin)));\n}\n\nconst fidoButton = document.getElementById(\"fidoButton\");\nfidoButton.addEventListener(\"click\", startFido);\nfunction startFido() {  \n    var publicKeyCredentialRequestOptions = '{{local.vnardbjyl.payload.output.rawResponse.publicKeyCredentialRequestOptions}}' || '{{local.utb6atat7q.payload.output.rawResponse.body.publicKeyCredentialRequestOptions}}';\n    Authenticate(publicKeyCredentialRequestOptions);\n}",
                "style": ".hidden-button{\n    display: none;\n}",
                "template": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"<div class=\\\"page\\\">\\n<div class=\\\"card card--no-padding\\\">\\n   <div class=\\\"card__content\\\">\\n      <div class=\\\"flex-container\\\">\\n         <div class=\\\"branding-template-logo-container\\\">\\n            <div class=\\\"org-logo\\\">\\n               <img\\n                  class=\\\"org-logo__image\\\"\\n                  src=\\\"https://d3uinntk0mqu3p.cloudfront.net/branding/market/a3d073bc-3108-49ad-b96c-404bea59a1d0.png\\\"\\n                  alt=\\\"Company Logo\\\"\\n                  />\\n            </div>\\n         </div>\\n         <div class=\\\"branding-template-form-container\\\">\\n            <h1 class=\\\"heading branding-template-heading\\\">\\n               {{#ifEquals type \\\"PLATFORM\\\"}}  \\n                    <svg role=\\\"presentation\\\" viewBox=\\\"0 0 24 24\\\" style=\\\"width: 32px; height: 32px;\\\">\\n                     <path d=\\\"M17.81,4.47C17.73,4.47 17.65,4.45 17.58,4.41C15.66,3.42 14,3 12,3C10.03,3 8.15,3.47 6.44,4.41C6.2,4.54 5.9,4.45 5.76,4.21C5.63,3.97 5.72,3.66 5.96,3.53C7.82,2.5 9.86,2 12,2C14.14,2 16,2.47 18.04,3.5C18.29,3.65 18.38,3.95 18.25,4.19C18.16,4.37 18,4.47 17.81,4.47M3.5,9.72C3.4,9.72 3.3,9.69 3.21,9.63C3,9.47 2.93,9.16 3.09,8.93C4.08,7.53 5.34,6.43 6.84,5.66C10,4.04 14,4.03 17.15,5.65C18.65,6.42 19.91,7.5 20.9,8.9C21.06,9.12 21,9.44 20.78,9.6C20.55,9.76 20.24,9.71 20.08,9.5C19.18,8.22 18.04,7.23 16.69,6.54C13.82,5.07 10.15,5.07 7.29,6.55C5.93,7.25 4.79,8.25 3.89,9.5C3.81,9.65 3.66,9.72 3.5,9.72M9.75,21.79C9.62,21.79 9.5,21.74 9.4,21.64C8.53,20.77 8.06,20.21 7.39,19C6.7,17.77 6.34,16.27 6.34,14.66C6.34,11.69 8.88,9.27 12,9.27C15.12,9.27 17.66,11.69 17.66,14.66A0.5,0.5 0 0,1 17.16,15.16A0.5,0.5 0 0,1 16.66,14.66C16.66,12.24 14.57,10.27 12,10.27C9.43,10.27 7.34,12.24 7.34,14.66C7.34,16.1 7.66,17.43 8.27,18.5C8.91,19.66 9.35,20.15 10.12,20.93C10.31,21.13 10.31,21.44 10.12,21.64C10,21.74 9.88,21.79 9.75,21.79M16.92,19.94C15.73,19.94 14.68,19.64 13.82,19.05C12.33,18.04 11.44,16.4 11.44,14.66A0.5,0.5 0 0,1 11.94,14.16A0.5,0.5 0 0,1 12.44,14.66C12.44,16.07 13.16,17.4 14.38,18.22C15.09,18.7 15.92,18.93 16.92,18.93C17.16,18.93 17.56,18.9 17.96,18.83C18.23,18.78 18.5,18.96 18.54,19.24C18.59,19.5 18.41,19.77 18.13,19.82C17.56,19.93 17.06,19.94 16.92,19.94M14.91,22C14.87,22 14.82,22 14.78,22C13.19,21.54 12.15,20.95 11.06,19.88C9.66,18.5 8.89,16.64 8.89,14.66C8.89,13.04 10.27,11.72 11.97,11.72C13.67,11.72 15.05,13.04 15.05,14.66C15.05,15.73 16,16.6 17.13,16.6C18.28,16.6 19.21,15.73 19.21,14.66C19.21,10.89 15.96,7.83 11.96,7.83C9.12,7.83 6.5,9.41 5.35,11.86C4.96,12.67 4.76,13.62 4.76,14.66C4.76,15.44 4.83,16.67 5.43,18.27C5.53,18.53 5.4,18.82 5.14,18.91C4.88,19 4.59,18.87 4.5,18.62C4,17.31 3.77,16 3.77,14.66C3.77,13.46 4,12.37 4.45,11.42C5.78,8.63 8.73,6.82 11.96,6.82C16.5,6.82 20.21,10.33 20.21,14.65C20.21,16.27 18.83,17.59 17.13,17.59C15.43,17.59 14.05,16.27 14.05,14.65C14.05,13.58 13.12,12.71 11.97,12.71C10.82,12.71 9.89,13.58 9.89,14.65C9.89,16.36 10.55,17.96 11.76,19.16C12.71,20.1 13.62,20.62 15.03,21C15.3,21.08 15.45,21.36 15.38,21.62C15.33,21.85 15.12,22 14.91,22Z\\\" style=\\\"fill: rgb(61, 69, 77);\\\"></path>\\n               </svg>\\n               <span class=\\\"text-left-to-icon\\\">Biometrics</span>\\n               {{/ifEquals}}\\n               {{#ifEquals type \\\"SECURITY_KEY\\\"}}  \\n                  <svg viewBox=\\\"0 0 24 24\\\" role=\\\"presentation\\\" style=\\\"width: 32px; height: 32px;\\\">\\n                      <path d=\\\"M8 15C8.55 15 9 15.45 9 16C9 16.55 8.55 17 8 17C7.45 17 7 16.55 7 16C7 15.45 7.45 15 8 15M15.07 4.69L16.5 6.1L15.07 7.5L13.66 6.1L15.07 4.69M17.9 7.5L19.31 8.93L17.9 10.34L16.5 8.93L17.9 7.5M8 13C6.34 13 5 14.34 5 16C5 17.66 6.34 19 8 19C9.66 19 11 17.66 11 16C11 14.34 9.66 13 8 13M9.77 4.33L10.5 5.08L14.29 1.29C14.47 1.11 14.72 1 15 1C15.28 1 15.53 1.11 15.71 1.29L22.78 8.36L22.78 8.37C22.92 8.54 23 8.76 23 9C23 9.3 22.87 9.57 22.66 9.76L22.66 9.76L18.93 13.5L19.67 14.23L12.95 20.95C11.68 22.22 9.93 23 8 23C4.13 23 1 19.87 1 16C1 14.07 1.78 12.32 3.05 11.05L9.77 4.33M20.59 9L15 3.41L11.93 6.5L17.5 12.08L20.59 9Z\\\" style=\\\"fill: rgb(61, 69, 77);\\\"></path>\\n                  </svg>\\n               <span class=\\\"text-left-to-icon\\\">Security Key</span>\\n               {{/ifEquals}}\\n            </h1>\\n            <div class=\\\"text-block branding-template-primary-text\\\">\\n               <div class=\\\"text-block--overflow-wrap\\\">\\n                  Enter the directions your browser provides to finish\\n                  {{#ifEquals type \\\"PLATFORM\\\"}} Biometrics {{/ifEquals}}\\n                  {{#ifEquals type \\\"SECURITY_KEY\\\"}} security key {{/ifEquals}}\\n                  pairing.\\n               </div>\\n            </div>\\n           <div class=\\\"form\\\">\\n            \"\n      },\n      {\n        \"text\": \"<div data-skcomponent=\\\"skerror\\\" class=\\\"feedback branding-template-feedback feedback--error picon-error-triangle\\\" data-skvisibility=\\\"\\\" ></div>\"\n      },\n      {\n        \"text\": \"\\n            <form id=\\\"securityKeyForm\\\" method=\\\"post\\\">\\n               <div class=\\\"float-label placeholder-shown\\\">\\n                  <input type=\\\"hidden\\\" name=\\\"assertionValue\\\" id=\\\"assertionValue\\\" />\\n                 <button data-skcomponent=\\\"skbutton\\\" data-skbuttontype=\\\"form-submit\\\" class=\\\"hidden-button\\\"  data-skbuttonvalue=\\\"submit\\\" data-skform=\\\"securityKeyForm\\\" id=\\\"assertionButton\\\">Next</button>\\n                  </div>\\n   </form>\\n                  <div>\\n                     <button class=\\\"button file-input--button branding-template-primary-button button--primary brand-primary-bg\\\" id=\\\"fidoButton\\\">Continue</button>\\n                  </div>\\n                  <div class=\\\"text-block branding-template-link-container\\\">\\n                     <div class=\\\"text-block--overflow-wrap\\\">\\n                        <a data-skcomponent=\\\"skbutton\\\" data-skbuttontype=\\\"back-to-previous\\\" class=\\\"branding-template-link-text link-text\\\" href=\\\"#\\\" data-skbuttonvalue=\\\"cancel\\\" id=\\\"cancel\\\">Cancel</a>\\n                     </div>\\n                  </div>\\n         </div>\\n            </div>\\n         </div>\\n      </div>\\n   </div>\\n</div>\"\n      }\n    ]\n  }\n]",
                "updatedDate": 1641910106843,
                "validationRules": [],
                "uiId": "Phqu1VV5HVDUJLwuvW61dyzFYMx2sRA4",
                "companyId": "6cQlNujpNKr8Rx50NwxbdnenYSPAW14d",
                "value": "Phqu1VV5HVDUJLwuvW61dyzFYMx2sRA4"
              },
              "inputSchema": {
                "value": "{\n\"type\": \"object\",\n   \"properties\": {\n      \"type\": {\n        \"displayName\": \"device type\",\n\t\t\t\"preferedControlType\": \"textField\",\n            \"enableParameters\": true\n      },\n      \"publicKeyCredentialCreationOptions\": {\n        \"displayName\": \"credentials\",\n\t\t\t\"preferedControlType\": \"textField\",\n            \"enableParameters\": true\n      },\n      \"hasDeviceSelectionScreen\": {\n        \"displayName\": \"show back button\",\n\t\t\t\"preferedControlType\": \"textField\",\n            \"enableParameters\": true\n      },\n       \"generatedQr\": {\n        \"displayName\": \"generatedQr\",\n\t\t\"preferedControlType\": \"textField\",\n       \"enableParameters\": true    \n      }\n   }\n}"
              },
              "outputSchema": {
                "value": "{\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"buttonValue\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"propertyName\": \"buttonValue\"\n\t\t},\n\t\t\"assertionValue\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"propertyName\": \"assertionValue\"\n\t\t}\n\t}\n}"
              },
              "customCSS": {
                "value": "\n\n.signin {\n    text-align: center;\n    margin: 0 auto;\n    padding: 20px;\n    margin-top: 20px;\n}\n\n.message{\n    padding-top:20px;\n}\n\n.fidoBtn {\n    width: 240px;\n    height: 40px;\n    border: 1px solid black;\n    margin-top: 20px; \n    color: black;\n    font-size: larger;\n}"
              },
              "validationRules": {
                "value": []
              },
              "type": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"PLATFORM\"\n      }\n    ]\n  }\n]"
              },
              "publicKeyCredentialCreationOptions": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"NOT USED\"\n      }\n    ]\n  }\n]"
              },
              "hasDeviceSelectionScreen": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"false\"\n      }\n    ]\n  }\n]"
              },
              "generatedQr": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"flow-connector.svg\",\n        \"url\": \"continueQr\",\n        \"data\": \"{{local.fwepxtly85.payload.output.continueQr}}\",\n        \"tooltip\": \"{{local.fwepxtly85.payload.output.continueQr}}\",\n        \"children\": [\n          {\n            \"text\": \"continueQr\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "nodeDescription": {
                "value": "Get FIDO Assersion"
              }
            },
            "idUnique": "huxz2oxhy9"
          },
          "position": {
            "x": 2107,
            "y": 930
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "pcwpf5r10m",
            "nodeType": "EVAL",
            "properties": {
              "7hkpq5tv5n": {
                "value": "anyTriggersFalse"
              }
            }
          },
          "position": {
            "x": 1627,
            "y": 930
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "k0britcz1g",
            "nodeType": "EVAL"
          },
          "position": {
            "x": 2227,
            "y": 930
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "1flbkcw8lz",
            "nodeType": "ANNOTATION",
            "name": "Annotation",
            "connectionId": "eoKSh9tBRPMcY2QMB87cB9RDMKsKJeaY",
            "connectorId": "annotationConnector",
            "capabilityName": "updateAnnotationProperties",
            "type": "action",
            "properties": {
              "backgroundColor": {
                "value": "#e7e7e7ff"
              },
              "annotation": {
                "value": "Mobile Phone Auth"
              },
              "fontFamily": {
                "value": "Verdana"
              },
              "fontSize": {
                "value": 13
              },
              "strokeColor": {
                "value": "#000000ff"
              },
              "strokeWidth": {
                "value": 1
              },
              "strokeEnabled": {
                "value": true
              }
            },
            "status": "configured",
            "idUnique": "higf095me2"
          },
          "position": {
            "x": 2017,
            "y": 810
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "9rcnye22sw",
            "nodeType": "CONNECTION",
            "connectionId": "12604bd0189ecfa7b8a95663e5a89f44",
            "connectorId": "challengeConnector",
            "name": "Challenge",
            "label": "Challenge",
            "status": "configured",
            "capabilityName": "updateChallenge",
            "properties": {
              "challenge": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"flow-connector.svg\",\n        \"url\": \"challenge\",\n        \"data\": \"{{local.sv7hekpw5m.payload.output.challenge}}\",\n        \"tooltip\": \"{{local.sv7hekpw5m.payload.output.challenge}}\",\n        \"children\": [\n          {\n            \"text\": \"challenge\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "challengeStatus": {
                "value": "approved"
              },
              "nodeTitle": {
                "value": "Update Challenge Status"
              }
            },
            "idUnique": "xw39z1ubxm"
          },
          "position": {
            "x": 2407,
            "y": 930
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "cvw8btes5x",
            "nodeType": "CONNECTION",
            "connectionId": "867ed4363b2bc21c860085ad2baa817d",
            "connectorId": "httpConnector",
            "name": "Http",
            "label": "httpConnector",
            "status": "configured",
            "capabilityName": "customHTMLTemplate",
            "type": "trigger",
            "properties": {
              "inputSchema": {
                "value": "{\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"type\": {\n        \"displayName\": \"type\",\n\t\t\"preferedControlType\": \"textField\",\n       \"enableParameters\": true    \n      }\n\t}\n}"
              },
              "customHTML": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"<div class=\\\"success\\\">\\n    <h1>Sign In Complete!</h1>\\n    <p class=\\\"message\\\">Proceed in the application</p>\\n</div>\"\n      }\n    ]\n  }\n]"
              },
              "nodeTitle": {
                "value": "Success on Mobile"
              },
              "formFieldsList": {
                "value": [
                  {
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "propertyName": "buttonValue"
                  }
                ]
              },
              "backgroundColor": {
                "value": "#9dc967ff"
              },
              "customCSS": {
                "value": ".success {\n    text-align: center;\n    margin: 0 auto;\n    padding: 20px;\n    margin-top: 20px;\n}\n.message{\n    padding-top:20px;\n}"
              }
            },
            "idUnique": "dayodxla9q"
          },
          "position": {
            "x": 2707,
            "y": 930
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "svevg8moqy",
            "nodeType": "EVAL",
            "properties": {
              "ot3calmmy8": {
                "value": "anyTriggersFalse"
              }
            }
          },
          "position": {
            "x": 2527,
            "y": 930
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "oheqxte0mc",
            "nodeType": "ANNOTATION",
            "name": "Annotation",
            "connectionId": "eoKSh9tBRPMcY2QMB87cB9RDMKsKJeaY",
            "connectorId": "annotationConnector",
            "capabilityName": "updateAnnotationProperties",
            "type": "action",
            "properties": {
              "backgroundColor": {
                "value": "#bbddeeff"
              },
              "annotation": {
                "value": "On Mobile"
              },
              "width": {
                "value": 1000
              },
              "cornerRadius": {
                "value": 0
              },
              "fontSize": {
                "value": 16
              },
              "fontFamily": {
                "value": "Verdana"
              }
            },
            "status": "configured",
            "idUnique": "l0c2wswwwn"
          },
          "position": {
            "x": 1417,
            "y": 750
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "styuwybm32",
            "nodeType": "CONNECTION",
            "connectionId": "867ed4363b2bc21c860085ad2baa817d",
            "connectorId": "httpConnector",
            "name": "Http",
            "label": "Http",
            "status": "configured",
            "capabilityName": "createSuccessResponse",
            "type": "action",
            "properties": {
              "nodeTitle": {
                "value": "Assertion Success"
              },
              "backgroundColor": {
                "value": "#9dc967ff"
              }
            }
          },
          "position": {
            "x": 877,
            "y": 1650
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "0onbzymzwb",
            "nodeType": "CONNECTION",
            "connectionId": "bd53b29e59770a4a99da81d104586c25",
            "connectorId": "nodeConnector",
            "name": "Node",
            "label": "Node",
            "status": "configured",
            "capabilityName": "goToNode",
            "type": "action",
            "properties": {
              "nodeInstanceId": {
                "value": "45z37ua6jf"
              },
              "errorCode": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"pingIdentity.svg\",\n        \"url\": \"code\",\n        \"data\": \"{{local.cc4etq8uhs.payload.error.code}}\",\n        \"tooltip\": \"{{local.cc4etq8uhs.payload.error.code}}\",\n        \"children\": [\n          {\n            \"text\": \"code\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "errorMessage": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"pingIdentity.svg\",\n        \"url\": \"message\",\n        \"data\": \"{{local.cc4etq8uhs.payload.error.message}}\",\n        \"tooltip\": \"{{local.cc4etq8uhs.payload.error.message}}\",\n        \"children\": [\n          {\n            \"text\": \"message\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              }
            },
            "idUnique": "dg0nn9ah0t"
          },
          "position": {
            "x": 877,
            "y": 1800
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "2qfot2ewcg",
            "nodeType": "CONNECTION",
            "connectionId": "867ed4363b2bc21c860085ad2baa817d",
            "connectorId": "httpConnector",
            "name": "Http",
            "label": "Http",
            "status": "configured",
            "capabilityName": "customHTMLTemplate",
            "type": "trigger",
            "properties": {
              "customHTML": {
                "value": "<form id=\"assertionForm\" method=\"post\">\n        <!-- IMPORTANT: This form contains 2 hidden fields to:\n                1) ASSERTION VALUE to care the fido assertion from the device\n                2) ASSERTION BUTTON which will be use to submit the form after \n                   the assertion is set-->\n        <div id=\"hiddenDiv\" style=\"display: none\">\n                <input id=\"assertionValue\" type=\"hidden\" name=\"assertionValue\" />\n                <button id=\"assertionButton\"\n                        data-skcomponent=\"skbutton\"\n                        data-skbuttontype=\"form-submit\"\n                        class=\"hidden-button\"\n                        data-skbuttonvalue=\"submit\"\n                        data-skform=\"assertionForm\" >Next</button>\n        </div>\n</form>\n\n<div class=\"bg-light d-flex flex-column justify-content-center align-items-center position-absolute top-0 start-0 bottom-0 end-0 overflow-auto\">\n    <div style=\"max-width: 400px; min-width: 400px; width: 100%\">\n        <div class=\"card shadow mb-5\">\n            <div class=\"card-body p-5 d-flex flex-column\">\n                <img class=\"companyLogo align-self-center mb-5\" alt=\"CIAM Passwordless\" />\n                <p class=\"text-danger mdi mdi-alert-circle\" data-id=\"feedback\" data-skcomponent=\"skerror\"></p>\n                <h1 class=\"text-center mb-4\">Sign In with Device Passkey</h1>\n                <p class=\"text-muted text-center\">Press continue and follow instructions to sign in using your device.\n                </p>\n                <div class=\"d-flex flex-column\">\n                    <button id=\"btnFido\" class=\"btn btn-primary mb-3\" >Continue</button>\n                    <button type=\"submit\" class=\"btn btn-link\" data-skcomponent=\"skbutton\"\n                        data-skbuttontype=\"form-submit\" id=\"btnCancel\" data-skbuttonvalue=\"CANCEL\">Cancel</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>"
              },
              "formFieldsList": {
                "value": [
                  {
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "propertyName": "buttonValue"
                  },
                  {
                    "propertyName": "assertionValue",
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "value": "",
                    "hashedVisibility": false,
                    "displayName": "assertionValue"
                  }
                ]
              },
              "customCSS": {},
              "customScript": {
                "value": "var authAbortController = window.PublicKeyCredential ? new AbortController() : null;\nvar authAbortSignal = window.PublicKeyCredential ? authAbortController.signal : null;\n\nwindow.abortWebAuthnSignal = function abortWebAuthnSignal()\n{\n    authAbortController.abort();\n    authAbortController = new AbortController();\n    authAbortSignal = authAbortController.signal;\n}\n\nwindow.IsWebAuthnSupported = function IsWebAuthnSupported()\n{\n    if (!window.PublicKeyCredential)\n    {\n            console.log(\"Web Authentication API is not supported on this browser.\");\n            return false;\n    }\n    return true;\n}\n\nwindow.isWebAuthnPlatformAuthenticatorAvailable = function isWebAuthnPlatformAuthenticatorAvailable() {\n    var timer;\n    var p1 = new Promise(function(resolve) {\n            timer = setTimeout(function() {\n                    resolve(false);\n            }, 1000);\n    });\n    var p2 = new Promise(function(resolve) {\n            if (IsWebAuthnSupported() && window.PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable) {\n                    resolve(\n                            window.PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable().catch(function(err) {\n                                    console.log(err);\n                                    return false;\n                            }));\n            }\n            else {\n                    resolve(false);\n            }\n    });\n    return Promise.race([p1, p2]).then(function (res) {\n            clearTimeout(timer);\n            return res;\n    });\n}\nwindow.WebAuthnPlatformAuthentication = function WebAuthnPlatformAuthentication(publicKeyCredentialRequestOptions) {\n    return new Promise(function(resolve, reject) {\n            isWebAuthnPlatformAuthenticatorAvailable().then(function (result) {\n                    if (result) {\n                            resolve(Authenticate(publicKeyCredentialRequestOptions));\n                    }\n                    reject(Error(\"UnSupportedBrowserError\"));\n            });\n    });\n}\nfunction Authenticate(publicKeyCredentialRequestOptions) {\n    return new Promise(function(resolve, reject) {\n            var options = JSON.parse(publicKeyCredentialRequestOptions);\n            var publicKeyCredential = {};\n            publicKeyCredential.challenge = new Uint8Array(options.challenge);\n            if ('allowCredentials' in options) {\n                    publicKeyCredential.allowCredentials = credentialListConversion(options.allowCredentials);\n            }\n            if ('rpId' in options) {\n                    publicKeyCredential.rpId = options.rpId;\n            }\n            if ('timeout' in options) {\n                    publicKeyCredential.timeout = options.timeout;\n            }\n            if ('userVerification' in options) {\n                    publicKeyCredential.userVerification = options.userVerification;\n            }\n            navigator.credentials.get({\"publicKey\": publicKeyCredential})\n                    .then(function (assertion) {\n                            // Send new credential info to server for verification and registration.\n                            var publicKeyCredential = {};\n                            if ('id' in assertion) {\n                                    publicKeyCredential.id = assertion.id;\n                            }\n                            if ('rawId' in assertion) {\n                                    publicKeyCredential.rawId = toBase64Str(assertion.rawId);\n                            }\n                            if ('type' in assertion) {\n                                    publicKeyCredential.type = assertion.type;\n                            }\n                            var response = {};\n                            response.clientDataJSON = toBase64Str(assertion.response.clientDataJSON);\n                            response.authenticatorData = toBase64Str(assertion.response.authenticatorData);\n                            response.signature = toBase64Str(assertion.response.signature);\n                            response.userHandle = toBase64Str(assertion.response.userHandle);\n                            publicKeyCredential.response = response;\n                            resolve(JSON.stringify(publicKeyCredential));\n                            document.getElementById(\"assertionValue\").value = JSON.stringify(publicKeyCredential);\n                            \n                            document.getElementById('assertionButton').click();\n                    }).catch(function (err) {\n                            // No acceptable authenticator or user refused consent. Cancel authentication\n                            // if this is the only device so we don't loop\n                            console.log(\"No acceptable authenticator or user refused consent\");\n\n            });\n    });\n}\nfunction credentialListConversion(list) {\n    var credList = [];\n    for (var i=0; i < list.length; i++) {\n            var cred = {\n                    type: list[i].type,\n                    id: new Uint8Array(list[i].id)\n            };\n            if (list[i].transports) {\n                    cred.transports = list[i].transports;\n            }\n            credList.push(cred);\n    }\n    return credList;\n}\nfunction toBase64Str(bin){\n    return btoa(String.fromCharCode.apply(null, new Uint8Array(bin)));\n}\n\nconst fidoButton = document.getElementById(\"btnFido\");\nfidoButton.addEventListener(\"click\", startFido);\nfunction startFido() {  \n    Authenticate('{{global.parameters.publicKeyCredentialRequestOptions}}');\n}"
              },
              "nodeTitle": {
                "value": "Device FIDO AuthN"
              },
              "nodeDescription": {
                "value": "Get FIDO Assertion"
              }
            }
          },
          "position": {
            "x": 547,
            "y": 1260
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "yurcyd8bmy",
            "nodeType": "EVAL",
            "label": "Evaluator"
          },
          "position": {
            "x": 367,
            "y": 1260
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "qniixfhqyf",
            "nodeType": "CONNECTION",
            "connectionId": "bd53b29e59770a4a99da81d104586c25",
            "connectorId": "nodeConnector",
            "name": "Node",
            "label": "Node",
            "status": "configured",
            "capabilityName": "startNode",
            "type": "trigger",
            "properties": {
              "inputSchema": {
                "value": "{\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"success\": {\n\t\t\t\"type\": \"boolean\",\n\t\t\t\"displayName\": \"success\",\n\t\t\t\"preferredControlType\": \"textField\",\n\t\t\t\"enableParameters\": true,\n\t\t\t\"propertyName\": \"success\"\n\t\t}\n\t}\n}"
              },
              "nodeTitle": {
                "value": "Get FIDO Assertion"
              }
            }
          },
          "position": {
            "x": 277,
            "y": 1260
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "q0j8p1c21o",
            "nodeType": "EVAL",
            "label": "Evaluator"
          },
          "position": {
            "x": 824,
            "y": 724
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "2rw3u3cvas",
            "nodeType": "CONNECTION",
            "connectionId": "bd53b29e59770a4a99da81d104586c25",
            "connectorId": "nodeConnector",
            "name": "Node",
            "label": "Node",
            "status": "configured",
            "capabilityName": "goToNode",
            "type": "action",
            "properties": {
              "nodeInstanceId": {
                "value": "qniixfhqyf"
              }
            }
          },
          "position": {
            "x": 944,
            "y": 724
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "lxu6e5g4bh",
            "nodeType": "EVAL",
            "label": "Evaluator"
          },
          "position": {
            "x": 1034,
            "y": 724
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "dvhkx4ades",
            "nodeType": "EVAL",
            "label": "Evaluator"
          },
          "position": {
            "x": 367,
            "y": 1650
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "rvp5w0bzvj",
            "nodeType": "CONNECTION",
            "connectionId": "bd53b29e59770a4a99da81d104586c25",
            "connectorId": "nodeConnector",
            "name": "Node",
            "label": "Node",
            "status": "configured",
            "capabilityName": "startNode",
            "type": "trigger",
            "properties": {
              "inputSchema": {
                "value": "{\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"assertionValue\": {\n\t\t\t\"type\": \"text\",\n\t\t\t\"displayName\": \"FIDO Assertion Value\",\n\t\t\t\"preferredControlType\": \"textField\",\n\t\t\t\"enableParameters\": true,\n\t\t\t\"propertyName\": \"assertionValue\"\n\t\t}\n\t}\n}"
              },
              "nodeTitle": {
                "value": "Check FIDO Assertion"
              }
            }
          },
          "position": {
            "x": 277,
            "y": 1650
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "negqi501z5",
            "nodeType": "CONNECTION",
            "connectionId": "bd53b29e59770a4a99da81d104586c25",
            "connectorId": "nodeConnector",
            "name": "Node",
            "label": "Node",
            "status": "configured",
            "capabilityName": "goToNode",
            "type": "action",
            "properties": {
              "nodeInstanceId": {
                "value": "rvp5w0bzvj"
              },
              "origin": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"https://packages.pingidentity.cloud\"\n      }\n    ]\n  }\n]"
              },
              "assertionValue": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"http.svg\",\n        \"url\": \"assertionValue\",\n        \"data\": \"{{local.2qfot2ewcg.payload.output.assertionValue}}\",\n        \"tooltip\": \"{{local.2qfot2ewcg.payload.output.assertionValue}}\",\n        \"children\": [\n          {\n            \"text\": \"assertionValue\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              }
            }
          },
          "position": {
            "x": 1154,
            "y": 724
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "03ae0yar5u",
            "nodeType": "CONNECTION",
            "connectionId": "bd53b29e59770a4a99da81d104586c25",
            "connectorId": "nodeConnector",
            "name": "Node",
            "label": "Node",
            "status": "configured",
            "capabilityName": "goToNode",
            "type": "action",
            "properties": {
              "nodeInstanceId": {
                "value": "rvp5w0bzvj"
              },
              "assertionValue": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"http.svg\",\n        \"url\": \"assertionValue\",\n        \"data\": \"{{local.ky5gtbz1ua.payload.output.assertionValue}}\",\n        \"tooltip\": \"{{local.ky5gtbz1ua.payload.output.assertionValue}}\",\n        \"children\": [\n          {\n            \"text\": \"assertionValue\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "origin": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"https://auth.pingone.com\"\n      }\n    ]\n  }\n]"
              }
            }
          },
          "position": {
            "x": 4507,
            "y": 540
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "b7lkx23gph",
            "nodeType": "EVAL",
            "label": "Evaluator"
          },
          "position": {
            "x": 667,
            "y": 1260
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "5us6oscy01",
            "nodeType": "CONNECTION",
            "connectionId": "bd53b29e59770a4a99da81d104586c25",
            "connectorId": "nodeConnector",
            "name": "Node",
            "label": "Node",
            "status": "configured",
            "capabilityName": "returnBackToCallingNode",
            "type": "trigger",
            "properties": {
              "outputSchema": {
                "value": "{\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"success\": {\n\t\t\t\"type\": \"boolean\",\n\t\t\t\"displayName\": \"success\",\n\t\t\t\"preferredControlType\": \"textField\",\n\t\t\t\"enableParameters\": true,\n\t\t\t\"propertyName\": \"success\"\n\t\t}\n\t}\n}"
              }
            }
          },
          "position": {
            "x": 1177,
            "y": 1260
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "9d4y1ikofr",
            "nodeType": "EVAL",
            "label": "Evaluator"
          },
          "position": {
            "x": 824,
            "y": 814
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "x85m46k6x9",
            "nodeType": "CONNECTION",
            "connectionId": "bd53b29e59770a4a99da81d104586c25",
            "connectorId": "nodeConnector",
            "name": "Node",
            "label": "Node",
            "status": "configured",
            "capabilityName": "goToNode",
            "type": "action",
            "properties": {
              "nodeInstanceId": {
                "value": "45z37ua6jf"
              },
              "errorMessage": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Unknown device platform\"\n      }\n    ]\n  }\n]"
              }
            },
            "idUnique": "k8bkzwzeed"
          },
          "position": {
            "x": 944,
            "y": 814
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "uw42ft9tuv",
            "nodeType": "CONNECTION",
            "connectionId": "867ed4363b2bc21c860085ad2baa817d",
            "connectorId": "httpConnector",
            "name": "Http",
            "label": "Http",
            "status": "configured",
            "capabilityName": "customHTMLTemplate",
            "type": "trigger",
            "properties": {
              "nodeTitle": {
                "value": "Display QR Code for Mobile"
              },
              "customHTML": {
                "value": "<div class=\"bg-light d-flex flex-column justify-content-center align-items-center position-absolute top-0 start-0 bottom-0 end-0 overflow-auto\">\n    <div style=\"max-width: 400px; min-width: 400px; width: 100%\">\n        <div class=\"card shadow mb-5\">\n            <div class=\"card-body p-5 d-flex flex-column\">\n                <img class=\"companyLogo align-self-center mb-5\" alt=\"CIAM Passwordless\" />\n                <h1 class=\"text-center mb-4\">Sign In with Mobile Passkey</h1>\n                <p class=\"text-muted text-center\">Scan the QR Code using your mobile device <br/>to sign in.</p>\n                <p class=\"text-danger mdi mdi-alert-circle\" data-id=\"feedback\" data-skcomponent=\"skerror\"></p>\n                <img class=\"align-self-center\" src=\"{{local.fwepxtly85.payload.output.continueQr}}\"</img>\n                <div class=\"align-self-center\">\n                    [[[skcomponent###c2tjb21wb25lbnQgInNrcG9sbGluZyIgIGNsYXNzPSIiIHBvbGxJbnRlcnZhbD0iMjAwMCIgcG9sbFJldHJpZXM9IjYwIiBwb2xsQ2hhbGxlbmdlU3RhdHVzPSJ0cnVlIg==###eyJuYW1lIjoic2twb2xsaW5nIiwib3B0aW9ucyI6eyJjbGFzcyI6IiIsInBvbGxJbnRlcnZhbCI6MjAwMCwicG9sbFJldHJpZXMiOjYwLCJwb2xsQ2hhbGxlbmdlU3RhdHVzIjoidHJ1ZSJ9LCJjb21wb25lbnRQcm9wcyI6eyJjbGFzcyI6eyJuYW1lIjoiY2xhc3MiLCJkaXNwbGF5TmFtZSI6IkNTUyBDbGFzcyJ9LCJwb2xsSW50ZXJ2YWwiOnsibmFtZSI6InBvbGxJbnRlcnZhbCIsImRpc3BsYXlOYW1lIjoiUG9sbCBJbnRlcnZhbCIsInZhbHVlIjoyMDAwfSwicG9sbFJldHJpZXMiOnsibmFtZSI6InBvbGxSZXRyaWVzIiwiZGlzcGxheU5hbWUiOiJQb2xsIFJldHJpZXMiLCJ2YWx1ZSI6NjB9LCJwb2xsQ2hhbGxlbmdlU3RhdHVzIjp7Im5hbWUiOiJwb2xsQ2hhbGxlbmdlU3RhdHVzIiwiZGlzcGxheU5hbWUiOiJQb2xsIENoYWxsZW5nZSBTdGF0dXMiLCJ0eXBlIjoic2VsZWN0IiwidmFsdWUiOiJ0cnVlIiwib3B0aW9ucyI6W3sibmFtZSI6IlRydWUiLCJ2YWx1ZSI6InRydWUifSx7Im5hbWUiOiJGYWxzZSIsInZhbHVlIjoiZmFsc2UifV19fX0=]]]\n                </div>\n                <div class=\"d-flex flex-column\">\n                    <button type=\"submit\" class=\"btn btn-link\" data-skcomponent=\"skbutton\"\n                                    data-skbuttontype=\"form-submit\" id=\"btnCancel\"\n                                    data-skbuttonvalue=\"CANCEL\">Cancel</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n"
              },
              "challenge": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"flow-connector.svg\",\n        \"url\": \"challenge\",\n        \"data\": \"{{local.fwepxtly85.payload.output.challenge}}\",\n        \"tooltip\": \"{{local.fwepxtly85.payload.output.challenge}}\",\n        \"children\": [\n          {\n            \"text\": \"challenge\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "formFieldsList": {
                "value": [
                  {
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "propertyName": "buttonValue"
                  }
                ]
              }
            }
          },
          "position": {
            "x": 1807,
            "y": 540
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "pbg49y9dah",
            "nodeType": "EVAL",
            "properties": {
              "8ol4te4pgb": {
                "value": "anyTriggersFalse"
              }
            }
          },
          "position": {
            "x": 4327,
            "y": 540
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "8568khaoyw",
            "nodeType": "EVAL",
            "label": "Evaluator"
          },
          "position": {
            "x": 1927,
            "y": 540
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "sv7hekpw5m",
            "nodeType": "CONNECTION",
            "connectionId": "24785f80baf404bdbc22086f3ac84028",
            "connectorId": "flowConnector",
            "name": "Flow",
            "label": "Flow",
            "status": "configured",
            "capabilityName": "oobStart",
            "properties": {
              "nodeTitle": {
                "value": "Desktop - Waiting for Mobile"
              }
            },
            "idUnique": "vred0vdxro"
          },
          "position": {
            "x": 3007,
            "y": 540
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "p7cu17te75",
            "nodeType": "CONNECTION",
            "connectionId": "867ed4363b2bc21c860085ad2baa817d",
            "connectorId": "httpConnector",
            "name": "Http",
            "label": "Http",
            "status": "configured",
            "capabilityName": "customHTMLTemplate",
            "type": "trigger",
            "properties": {
              "nodeTitle": {
                "value": "Wait for Mobile"
              },
              "customHTML": {
                "value": "<div class=\"bg-light d-flex flex-column justify-content-center align-items-center position-absolute top-0 start-0 bottom-0 end-0 overflow-auto\">\n    <div style=\"max-width: 400px; min-width: 400px; width: 100%\">\n        <div class=\"card shadow mb-5\">\n            <div class=\"card-body p-5 d-flex flex-column\">\n                <img class=\"companyLogo align-self-center mb-5\" alt=\"CIAM Passwordless\" />\n                <h1 class=\"text-center mb-4\">Sign In with Mobile Passkey</h1>\n                <p class=\"text-muted text-center\">Complete sign in on your mobile device.</p>\n                <div class=\"align-self-center\">\n                    [[[skcomponent###c2tjb21wb25lbnQgInNrcG9sbGluZyIgIGNsYXNzPSIiIHBvbGxJbnRlcnZhbD0iMjAwMCIgcG9sbFJldHJpZXM9IjYwIiBwb2xsQ2hhbGxlbmdlU3RhdHVzPSJ0cnVlIg==###eyJuYW1lIjoic2twb2xsaW5nIiwib3B0aW9ucyI6eyJjbGFzcyI6IiIsInBvbGxJbnRlcnZhbCI6MjAwMCwicG9sbFJldHJpZXMiOjYwLCJwb2xsQ2hhbGxlbmdlU3RhdHVzIjoidHJ1ZSJ9LCJjb21wb25lbnRQcm9wcyI6eyJjbGFzcyI6eyJuYW1lIjoiY2xhc3MiLCJkaXNwbGF5TmFtZSI6IkNTUyBDbGFzcyJ9LCJwb2xsSW50ZXJ2YWwiOnsibmFtZSI6InBvbGxJbnRlcnZhbCIsImRpc3BsYXlOYW1lIjoiUG9sbCBJbnRlcnZhbCIsInZhbHVlIjoyMDAwfSwicG9sbFJldHJpZXMiOnsibmFtZSI6InBvbGxSZXRyaWVzIiwiZGlzcGxheU5hbWUiOiJQb2xsIFJldHJpZXMiLCJ2YWx1ZSI6NjB9LCJwb2xsQ2hhbGxlbmdlU3RhdHVzIjp7Im5hbWUiOiJwb2xsQ2hhbGxlbmdlU3RhdHVzIiwiZGlzcGxheU5hbWUiOiJQb2xsIENoYWxsZW5nZSBTdGF0dXMiLCJ0eXBlIjoic2VsZWN0IiwidmFsdWUiOiJ0cnVlIiwib3B0aW9ucyI6W3sibmFtZSI6IlRydWUiLCJ2YWx1ZSI6InRydWUifSx7Im5hbWUiOiJGYWxzZSIsInZhbHVlIjoiZmFsc2UifV19fX0=]]]\n                </div>\n                <p class=\"text-danger mdi mdi-alert-circle\" data-id=\"feedback\" data-skcomponent=\"skerror\"></p>\n                <div class=\"d-flex flex-column\">\n                    <button type=\"submit\" class=\"btn btn-link\" data-skcomponent=\"skbutton\"\n                                    data-skbuttontype=\"form-submit\" id=\"btnCancel\"\n                                    data-skbuttonvalue=\"CANCEL\">Cancel</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n"
              },
              "challenge": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"flow-connector.svg\",\n        \"url\": \"challenge\",\n        \"data\": \"{{local.sv7hekpw5m.payload.output.challenge}}\",\n        \"tooltip\": \"{{local.sv7hekpw5m.payload.output.challenge}}\",\n        \"children\": [\n          {\n            \"text\": \"challenge\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "formFieldsList": {
                "value": [
                  {
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "propertyName": "buttonValue"
                  }
                ]
              }
            },
            "idUnique": "qyg3e9nsoa"
          },
          "position": {
            "x": 3307,
            "y": 540
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "tljqjelpt1",
            "nodeType": "EVAL"
          },
          "position": {
            "x": 3127,
            "y": 540
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "o96ndv0e6s",
            "nodeType": "CONNECTION",
            "connectionId": "12604bd0189ecfa7b8a95663e5a89f44",
            "connectorId": "challengeConnector",
            "name": "Challenge",
            "label": "Challenge",
            "status": "configured",
            "capabilityName": "updateChallenge",
            "properties": {
              "challenge": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"flow-connector.svg\",\n        \"url\": \"challenge\",\n        \"data\": \"{{local.qt6i45kia9.payload.output.challenge}}\",\n        \"tooltip\": \"{{local.qt6i45kia9.payload.output.challenge}}\",\n        \"children\": [\n          {\n            \"text\": \"challenge\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "challengeStatus": {
                "value": "approved"
              },
              "nodeTitle": {
                "value": "Remove QR Code from Desktop"
              }
            },
            "idUnique": "yggbin6yrq"
          },
          "position": {
            "x": 1807,
            "y": 930
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "le8cvzegey",
            "nodeType": "CONNECTION",
            "connectionId": "12604bd0189ecfa7b8a95663e5a89f44",
            "connectorId": "challengeConnector",
            "name": "Challenge",
            "label": "Challenge",
            "status": "configured",
            "capabilityName": "getChallenge",
            "properties": {
              "challenge": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"flow-connector.svg\",\n        \"url\": \"challenge\",\n        \"data\": \"{{local.fwepxtly85.payload.output.challenge}}\",\n        \"tooltip\": \"{{local.fwepxtly85.payload.output.challenge}}\",\n        \"children\": [\n          {\n            \"text\": \"challenge\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "nodeTitle": {
                "value": "Check Challenge"
              }
            },
            "idUnique": "1t3rgvmsvq"
          },
          "position": {
            "x": 2407,
            "y": 540
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "1ibeeco9jv",
            "nodeType": "EVAL",
            "label": "Evaluator"
          },
          "position": {
            "x": 2527,
            "y": 540
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "hjb3z1f5em",
            "nodeType": "CONNECTION",
            "connectionId": "de650ca45593b82c49064ead10b9fe17",
            "connectorId": "functionsConnector",
            "name": "Functions",
            "label": "Functions",
            "status": "configured",
            "capabilityName": "AEqualsB",
            "type": "trigger",
            "properties": {
              "leftValueA": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"challenge.svg\",\n        \"url\": \"challengeStatus\",\n        \"data\": \"{{local.le8cvzegey.payload.output.challengeStatus}}\",\n        \"tooltip\": \"{{local.le8cvzegey.payload.output.challengeStatus}}\",\n        \"children\": [\n          {\n            \"text\": \"challengeStatus\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "rightValueB": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"approved\"\n      }\n    ]\n  }\n]"
              },
              "nodeTitle": {
                "value": "Challenge Approved?"
              }
            }
          },
          "position": {
            "x": 2707,
            "y": 540
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "3lc72ezybg",
            "nodeType": "EVAL"
          },
          "position": {
            "x": 2827,
            "y": 540
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "tnyarew933",
            "nodeType": "CONNECTION",
            "connectionId": "12604bd0189ecfa7b8a95663e5a89f44",
            "connectorId": "challengeConnector",
            "name": "Challenge",
            "label": "Challenge",
            "status": "configured",
            "capabilityName": "getChallenge",
            "type": "action",
            "properties": {
              "challenge": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"flow-connector.svg\",\n        \"url\": \"challenge\",\n        \"data\": \"{{local.sv7hekpw5m.payload.output.challenge}}\",\n        \"tooltip\": \"{{local.sv7hekpw5m.payload.output.challenge}}\",\n        \"children\": [\n          {\n            \"text\": \"challenge\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              }
            }
          },
          "position": {
            "x": 3907,
            "y": 540
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "9giwe44a7k",
            "nodeType": "EVAL",
            "label": "Evaluator"
          },
          "position": {
            "x": 4027,
            "y": 540
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "qf6vrdpxcd",
            "nodeType": "CONNECTION",
            "connectionId": "de650ca45593b82c49064ead10b9fe17",
            "connectorId": "functionsConnector",
            "name": "Functions",
            "label": "Functions",
            "status": "configured",
            "capabilityName": "AEqualsB",
            "type": "trigger",
            "properties": {
              "leftValueA": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"challenge.svg\",\n        \"url\": \"challengeStatus\",\n        \"data\": \"{{local.tnyarew933.payload.output.challengeStatus}}\",\n        \"tooltip\": \"{{local.tnyarew933.payload.output.challengeStatus}}\",\n        \"children\": [\n          {\n            \"text\": \"challengeStatus\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "rightValueB": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"approved\"\n      }\n    ]\n  }\n]"
              },
              "nodeTitle": {
                "value": "Challenge Approved?"
              }
            }
          },
          "position": {
            "x": 4207,
            "y": 540
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "l4yb09wiac",
            "nodeType": "EVAL"
          },
          "position": {
            "x": 3427,
            "y": 540
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "8ol4te4pgb",
            "nodeType": "CONNECTION",
            "connectionId": "bd53b29e59770a4a99da81d104586c25",
            "connectorId": "nodeConnector",
            "name": "Node",
            "label": "Node",
            "status": "configured",
            "capabilityName": "goToNode",
            "type": "action",
            "properties": {
              "nodeInstanceId": {
                "value": "45z37ua6jf"
              },
              "errorMessage": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Unable to authenticate with this device\"\n      }\n    ]\n  }\n]"
              }
            },
            "idUnique": "82xg4ecp0a"
          },
          "position": {
            "x": 4507,
            "y": 690
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "59ok678xlg",
            "nodeType": "EVAL",
            "label": "Evaluator"
          },
          "position": {
            "x": 824,
            "y": 664
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "26qdnhh3ze",
            "nodeType": "CONNECTION",
            "connectionId": "06922a684039827499bdbdd97f49827b",
            "connectorId": "variablesConnector",
            "name": "Variables",
            "label": "Variables",
            "status": "configured",
            "capabilityName": "saveValue",
            "type": "trigger",
            "properties": {
              "nodeTitle": {
                "value": "_NOP_"
              }
            }
          },
          "position": {
            "x": 1064,
            "y": 544
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "z52f4ypnvz",
            "nodeType": "EVAL"
          },
          "position": {
            "x": 824,
            "y": 574
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "45z37ua6jf",
            "nodeType": "CONNECTION",
            "connectionId": "bd53b29e59770a4a99da81d104586c25",
            "connectorId": "nodeConnector",
            "name": "Node",
            "label": "Node",
            "status": "configured",
            "capabilityName": "startNode",
            "type": "trigger",
            "properties": {
              "inputSchema": {
                "value": "{\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"errorCode\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"displayName\": \"Error Code\",\n\t\t\t\"preferredControlType\": \"textField\",\n\t\t\t\"enableParameters\": true,\n\t\t\t\"propertyName\": \"errorCode\"\n\t\t},\n\t\t\"errorMessage\": {\n\t\t\t\"type\": \"String\",\n\t\t\t\"displayName\": \"Error Message\",\n\t\t\t\"preferredControlType\": \"textField\",\n\t\t\t\"enableParameters\": true,\n\t\t\t\"propertyName\": \"errorMessage\"\n\t\t}\n\t}\n}"
              },
              "nodeTitle": {
                "value": "Error"
              }
            }
          },
          "position": {
            "x": 277,
            "y": 2010
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "r80e1t6i9x",
            "nodeType": "EVAL",
            "label": "Evaluator"
          },
          "position": {
            "x": 367,
            "y": 2010
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "wmlrskt0xx",
            "nodeType": "CONNECTION",
            "connectionId": "867ed4363b2bc21c860085ad2baa817d",
            "connectorId": "httpConnector",
            "name": "Http",
            "label": "Http",
            "status": "configured",
            "capabilityName": "createErrorResponse",
            "type": "action",
            "properties": {
              "nodeTitle": {
                "value": "Error JSON"
              },
              "backgroundColor": {
                "value": "#ffc8c1ff"
              },
              "claimsNameValuePairs": {
                "value": [
                  {
                    "name": "errorCode",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"teleport.svg\",\n        \"url\": \"errorCode\",\n        \"data\": \"{{local.45z37ua6jf.payload.output.errorCode}}\",\n        \"tooltip\": \"{{local.45z37ua6jf.payload.output.errorCode}}\",\n        \"children\": [\n          {\n            \"text\": \"errorCode\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]",
                    "key": 0.7505189133115058,
                    "label": "errorCode (number - flowInstance)",
                    "type": "number",
                    "nameDefault": "errorCode"
                  },
                  {
                    "name": "errorMessage",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"teleport.svg\",\n        \"url\": \"errorMessage\",\n        \"data\": \"{{local.45z37ua6jf.payload.output.errorMessage}}\",\n        \"tooltip\": \"{{local.45z37ua6jf.payload.output.errorMessage}}\",\n        \"children\": [\n          {\n            \"text\": \"errorMessage\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]",
                    "key": 0.9809707255767062,
                    "label": "errorMessage (string - flowInstance)",
                    "type": "string",
                    "nameDefault": "errorMessage"
                  }
                ]
              }
            }
          },
          "position": {
            "x": 547,
            "y": 2010
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "z4g5s0nmy",
            "nodeType": "ANNOTATION",
            "name": "Annotation",
            "connectionId": "921bfae85c38ed45045e07be703d86b8",
            "connectorId": "annotationConnector",
            "capabilityName": "updateAnnotationProperties",
            "type": "action",
            "properties": {
              "backgroundColor": {
                "value": "#fefcc4ff"
              },
              "annotationTextColor": {
                "value": "#000000"
              },
              "width": {
                "value": 1000
              },
              "annotation": {
                "value": "Common Error Handler"
              },
              "fontFamily": {
                "value": "Verdana"
              },
              "fontStyle": {
                "value": "normal"
              },
              "fontSize": {
                "value": 16
              },
              "strokeEnabled": {
                "value": false
              },
              "strokeWidth": {
                "value": 0
              },
              "strokeColor": {
                "value": "#000000ff"
              }
            },
            "status": "configured",
            "idUnique": "8yl4aehn8w"
          },
          "position": {
            "x": 457,
            "y": 1890
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "k0u00birhq",
            "nodeType": "CONNECTION",
            "connectionId": "867ed4363b2bc21c860085ad2baa817d",
            "connectorId": "httpConnector",
            "name": "Http",
            "label": "httpConnector",
            "status": "configured",
            "capabilityName": "customHTMLTemplate",
            "type": "trigger",
            "properties": {
              "inputSchema": {
                "value": "{\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"type\": {\n        \"displayName\": \"type\",\n\t\t\"preferedControlType\": \"textField\",\n       \"enableParameters\": true    \n      }\n\t}\n}"
              },
              "customHTML": {
                "value": "<div class=\"success\">\n    <h1>Authentication Failed</h1>\n    <p class=\"message\">Unable to authenticate this device, please try again.</p>\n</div>"
              },
              "nodeTitle": {
                "value": "Authentication Failed"
              },
              "formFieldsList": {
                "value": [
                  {
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "propertyName": "buttonValue"
                  }
                ]
              },
              "backgroundColor": {
                "value": "#ffc8c1ff"
              },
              "customCSS": {
                "value": ".success {\n    text-align: center;\n    height: 200px;\n    width: 360px;\n    border-style: solid;\n    border-width: 1px;\n    border-color: #000000;\n    margin: 0 auto;\n    padding-top: 50px;\n    margin-top: 40px;\n}\n.message{\n    padding-top:20px;\n}"
              }
            },
            "idUnique": "bxqwl9cd8o"
          },
          "position": {
            "x": 2107,
            "y": 1110
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "ot3calmmy8",
            "nodeType": "CONNECTION",
            "connectionId": "867ed4363b2bc21c860085ad2baa817d",
            "connectorId": "httpConnector",
            "name": "Http",
            "label": "httpConnector",
            "status": "configured",
            "capabilityName": "customHTMLTemplate",
            "type": "trigger",
            "properties": {
              "inputSchema": {
                "value": "{\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"type\": {\n        \"displayName\": \"type\",\n\t\t\"preferedControlType\": \"textField\",\n       \"enableParameters\": true    \n      }\n\t}\n}"
              },
              "customHTML": {
                "value": "<div class=\"success\">\n    <h1>Authentication Failed</h1>\n    <p class=\"message\">Unable to authenticate this device, please try again.</p>\n</div>"
              },
              "nodeTitle": {
                "value": "Authentication Failed"
              },
              "formFieldsList": {
                "value": [
                  {
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "propertyName": "buttonValue"
                  }
                ]
              },
              "backgroundColor": {
                "value": "#ffc8c1ff"
              },
              "customCSS": {
                "value": ".success {\n    text-align: center;\n    height: 200px;\n    width: 360px;\n    border-style: solid;\n    border-width: 1px;\n    border-color: #000000;\n    margin: 0 auto;\n    padding-top: 50px;\n    margin-top: 40px;\n}\n.message{\n    padding-top:20px;\n}"
              }
            },
            "idUnique": "7eu7hfqxh1"
          },
          "position": {
            "x": 2707,
            "y": 1110
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "w0vyolixzc",
            "nodeType": "ANNOTATION",
            "name": "Annotation",
            "connectionId": "921bfae85c38ed45045e07be703d86b8",
            "connectorId": "annotationConnector",
            "capabilityName": "updateAnnotationProperties",
            "type": "action",
            "properties": {
              "backgroundColor": {
                "value": "#e7e7e7ff"
              },
              "annotationTextColor": {
                "value": "#000000"
              },
              "annotation": {
                "value": "This challenge is approved by the \"On Mobile\" branch above to clear the QR code from the screen.  A new challenge is then issued for the normal polling cycle"
              },
              "width": {
                "value": 300
              },
              "height": {
                "value": 120
              },
              "strokeEnabled": {
                "value": true
              },
              "strokeColor": {
                "value": "#000000ff"
              },
              "strokeWidth": {
                "value": 1
              },
              "fontSize": {
                "value": 13
              },
              "fontFamily": {
                "value": "Verdana"
              },
              "cornerRadius": {
                "value": 5
              }
            },
            "status": "configured"
          },
          "position": {
            "x": 2407,
            "y": 360
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "7ypmafd47c",
            "nodeType": "ANNOTATION",
            "name": "Annotation",
            "connectionId": "921bfae85c38ed45045e07be703d86b8",
            "connectorId": "annotationConnector",
            "capabilityName": "updateAnnotationProperties",
            "type": "action",
            "properties": {
              "backgroundColor": {
                "value": "#fefcc4ff"
              },
              "annotationTextColor": {
                "value": "#000000"
              },
              "width": {
                "value": 1000
              },
              "annotation": {
                "value": "Get Fido Assertion"
              },
              "fontFamily": {
                "value": "Verdana"
              },
              "fontStyle": {
                "value": "normal"
              },
              "fontSize": {
                "value": 16
              },
              "strokeEnabled": {
                "value": false
              },
              "strokeWidth": {
                "value": 0
              },
              "strokeColor": {
                "value": "#000000ff"
              }
            },
            "status": "configured",
            "idUnique": "m1md86wij2"
          },
          "position": {
            "x": 464,
            "y": 1114
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "nld8vwjy8t",
            "nodeType": "ANNOTATION",
            "name": "Annotation",
            "connectionId": "921bfae85c38ed45045e07be703d86b8",
            "connectorId": "annotationConnector",
            "capabilityName": "updateAnnotationProperties",
            "type": "action",
            "properties": {
              "backgroundColor": {
                "value": "#fefcc4ff"
              },
              "annotationTextColor": {
                "value": "#000000"
              },
              "width": {
                "value": 1000
              },
              "annotation": {
                "value": "Check Fido Assertion"
              },
              "fontFamily": {
                "value": "Verdana"
              },
              "fontStyle": {
                "value": "normal"
              },
              "fontSize": {
                "value": 16
              },
              "strokeEnabled": {
                "value": false
              },
              "strokeWidth": {
                "value": 0
              },
              "strokeColor": {
                "value": "#000000ff"
              }
            },
            "status": "configured",
            "idUnique": "tfpzr5va09"
          },
          "position": {
            "x": 457,
            "y": 1500
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "hg48txwkb5",
            "nodeType": "ANNOTATION",
            "name": "Annotation",
            "connectionId": "921bfae85c38ed45045e07be703d86b8",
            "connectorId": "annotationConnector",
            "capabilityName": "updateAnnotationProperties",
            "type": "action",
            "properties": {
              "backgroundColor": {
                "value": "#4a90e2ff"
              },
              "annotationTextColor": {
                "value": "#ffffffff"
              },
              "width": {
                "value": 1000
              },
              "annotation": {
                "value": "CIAM Passwordless AuthN FIDO"
              },
              "fontFamily": {
                "value": "Verdana"
              },
              "fontStyle": {
                "value": "bold"
              },
              "fontSize": {
                "value": 16
              },
              "strokeEnabled": {
                "value": false
              },
              "strokeWidth": {
                "value": 0
              },
              "strokeColor": {
                "value": "#000000ff"
              }
            },
            "status": "configured",
            "idUnique": "jtbh2nyrfm"
          },
          "position": {
            "x": 494,
            "y": 214
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "hhiyjdwsqx",
            "nodeType": "ANNOTATION",
            "name": "Annotation",
            "connectionId": "eoKSh9tBRPMcY2QMB87cB9RDMKsKJeaY",
            "connectorId": "annotationConnector",
            "capabilityName": "updateAnnotationProperties",
            "type": "action",
            "properties": {
              "backgroundColor": {
                "value": "#bbddeeff"
              },
              "annotation": {
                "value": "On Desktop"
              },
              "width": {
                "value": 1000
              },
              "fontFamily": {
                "value": "Verdana"
              },
              "fontSize": {
                "value": 16
              }
            },
            "status": "configured",
            "idUnique": "68udgifzqk"
          },
          "position": {
            "x": 1394,
            "y": 304
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "8zjevtjkb1",
            "nodeType": "ANNOTATION",
            "name": "Annotation",
            "connectionId": "eoKSh9tBRPMcY2QMB87cB9RDMKsKJeaY",
            "connectorId": "annotationConnector",
            "capabilityName": "updateAnnotationProperties",
            "type": "action",
            "properties": {
              "backgroundColor": {
                "value": "#e7e7e7ff"
              },
              "annotation": {
                "value": "Generate & Display QR Code"
              },
              "fontFamily": {
                "value": "Verdana"
              },
              "fontSize": {
                "value": 13
              },
              "strokeColor": {
                "value": "#000000ff"
              },
              "strokeWidth": {
                "value": 1
              },
              "strokeEnabled": {
                "value": true
              },
              "width": {
                "value": 450
              }
            },
            "status": "configured",
            "idUnique": "hhi4opbgnv"
          },
          "position": {
            "x": 1417,
            "y": 420
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "ul44xbvk4h",
            "nodeType": "ANNOTATION",
            "name": "Annotation",
            "connectionId": "eoKSh9tBRPMcY2QMB87cB9RDMKsKJeaY",
            "connectorId": "annotationConnector",
            "capabilityName": "updateAnnotationProperties",
            "type": "action",
            "properties": {
              "backgroundColor": {
                "value": "#e7e7e7ff"
              },
              "annotation": {
                "value": "Wait for Mobile Auth to Complete"
              },
              "fontFamily": {
                "value": "Verdana"
              },
              "fontSize": {
                "value": 13
              },
              "strokeColor": {
                "value": "#000000ff"
              },
              "strokeWidth": {
                "value": 1
              },
              "strokeEnabled": {
                "value": true
              },
              "width": {
                "value": 450
              }
            },
            "status": "configured",
            "idUnique": "4mt04s2tmw"
          },
          "position": {
            "x": 2917,
            "y": 420
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "h6jfnu44ff",
            "nodeType": "CONNECTION",
            "connectionId": "de650ca45593b82c49064ead10b9fe17",
            "connectorId": "functionsConnector",
            "name": "Functions",
            "label": "Functions",
            "status": "configured",
            "capabilityName": "ANotEqualsB",
            "type": "trigger",
            "properties": {
              "rightValueB": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"CANCEL\"\n      }\n    ]\n  }\n]"
              },
              "leftValueA": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"http.svg\",\n        \"url\": \"buttonValue\",\n        \"data\": \"{{local.uw42ft9tuv.payload.output.buttonValue}}\",\n        \"tooltip\": \"{{local.uw42ft9tuv.payload.output.buttonValue}}\",\n        \"children\": [\n          {\n            \"text\": \"buttonValue\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "nodeTitle": {
                "value": "Clicked Cancel?"
              }
            }
          },
          "position": {
            "x": 2107,
            "y": 540
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "jbp3kxtqba",
            "nodeType": "EVAL",
            "properties": {
              "yxrhgftbq7": {
                "value": "anyTriggersFalse"
              }
            }
          },
          "position": {
            "x": 2227,
            "y": 540
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "yxrhgftbq7",
            "nodeType": "CONNECTION",
            "connectionId": "867ed4363b2bc21c860085ad2baa817d",
            "connectorId": "httpConnector",
            "name": "Http",
            "label": "Http",
            "status": "configured",
            "capabilityName": "createErrorResponse",
            "type": "action",
            "properties": {
              "nodeTitle": {
                "value": "Cancel Btn Pressed"
              },
              "backgroundColor": {
                "value": "#ffc8c1ff"
              },
              "claimsNameValuePairs": {
                "value": [
                  {
                    "name": "userAction",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"CANCEL\"\n      }\n    ]\n  }\n]",
                    "key": 0.9189404156770029,
                    "label": "userAction (string - flowInstance)",
                    "type": "string"
                  }
                ]
              }
            }
          },
          "position": {
            "x": 2407,
            "y": 690
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "culhnlat6p",
            "nodeType": "CONNECTION",
            "connectionId": "de650ca45593b82c49064ead10b9fe17",
            "connectorId": "functionsConnector",
            "name": "Functions",
            "label": "Functions",
            "status": "configured",
            "capabilityName": "ANotEqualsB",
            "type": "trigger",
            "properties": {
              "rightValueB": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"CANCEL\"\n      }\n    ]\n  }\n]"
              },
              "leftValueA": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"http.svg\",\n        \"url\": \"buttonValue\",\n        \"data\": \"{{local.p7cu17te75.payload.output.buttonValue}}\",\n        \"tooltip\": \"{{local.p7cu17te75.payload.output.buttonValue}}\",\n        \"children\": [\n          {\n            \"text\": \"buttonValue\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "nodeTitle": {
                "value": "Clicked Cancel?"
              }
            }
          },
          "position": {
            "x": 3610,
            "y": 540.5
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "griqdv1n01",
            "nodeType": "EVAL",
            "properties": {
              "3dbv9i2260": {
                "value": "anyTriggersFalse"
              }
            }
          },
          "position": {
            "x": 3727,
            "y": 540
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "3dbv9i2260",
            "nodeType": "CONNECTION",
            "connectionId": "867ed4363b2bc21c860085ad2baa817d",
            "connectorId": "httpConnector",
            "name": "Http",
            "label": "Http",
            "status": "configured",
            "capabilityName": "createErrorResponse",
            "type": "action",
            "properties": {
              "nodeTitle": {
                "value": "Cancel Btn Pressed"
              },
              "backgroundColor": {
                "value": "#ffc8c1ff"
              },
              "claimsNameValuePairs": {
                "value": [
                  {
                    "name": "userAction",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"CANCEL\"\n      }\n    ]\n  }\n]",
                    "key": 0.9189404156770029,
                    "label": "userAction (string - flowInstance)",
                    "type": "string"
                  }
                ]
              }
            }
          },
          "position": {
            "x": 3907,
            "y": 690
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "r46ptxwi6c",
            "nodeType": "CONNECTION",
            "connectionId": "de650ca45593b82c49064ead10b9fe17",
            "connectorId": "functionsConnector",
            "name": "Functions",
            "label": "Functions",
            "status": "configured",
            "capabilityName": "ANotEqualsB",
            "type": "trigger",
            "properties": {
              "rightValueB": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"CANCEL\"\n      }\n    ]\n  }\n]"
              },
              "leftValueA": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"http.svg\",\n        \"url\": \"buttonValue\",\n        \"data\": \"{{local.2qfot2ewcg.payload.output.buttonValue}}\",\n        \"tooltip\": \"{{local.2qfot2ewcg.payload.output.buttonValue}}\",\n        \"children\": [\n          {\n            \"text\": \"buttonValue\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "nodeTitle": {
                "value": "Clicked Cancel?"
              }
            }
          },
          "position": {
            "x": 877,
            "y": 1260
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "icnbv6umm9",
            "nodeType": "EVAL",
            "properties": {
              "75n4cddp6c": {
                "value": "anyTriggersFalse"
              }
            }
          },
          "position": {
            "x": 1012,
            "y": 1260
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "75n4cddp6c",
            "nodeType": "CONNECTION",
            "connectionId": "867ed4363b2bc21c860085ad2baa817d",
            "connectorId": "httpConnector",
            "name": "Http",
            "label": "Http",
            "status": "configured",
            "capabilityName": "createErrorResponse",
            "type": "action",
            "properties": {
              "nodeTitle": {
                "value": "Cancel Btn Pressed"
              },
              "backgroundColor": {
                "value": "#ffc8c1ff"
              },
              "claimsNameValuePairs": {
                "value": [
                  {
                    "name": "userAction",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"CANCEL\"\n      }\n    ]\n  }\n]",
                    "key": 0.9189404156770029,
                    "label": "userAction (string - flowInstance)",
                    "type": "string"
                  }
                ]
              }
            }
          },
          "position": {
            "x": 1177,
            "y": 1410
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "packagedoc",
            "nodeType": "ANNOTATION",
            "name": "Annotation",
            "connectionId": "921bfae85c38ed45045e07be703d86b8",
            "connectorId": "annotationConnector",
            "capabilityName": "updateAnnotationProperties",
            "type": "action",
            "properties": {
              "backgroundColor": {
                "value": "#efefefff"
              },
              "annotationTextColor": {
                "value": "#000000ff"
              },
              "annotation": {
                "value": "######################################################################################################## #                          Name : CIAM-Passwordless-002-AuthN-FIDO                                     # #                    Created by : Ping Identity                                                        # #                       Version : 1.0.0                                                                # #                  Release date : Thu Dec 29 2022 12:24:43 GMT-0600 (Central Standard Time)            # #                       Support : https://support.pingidentity.com                                     # #              Terraform Module : /tmp/terraform-pingone-ciam-passwordless                             # #                               :                                                                      # #                               :                                                                      # ######################################################################################################## "
              },
              "width": {
                "value": 1008
              },
              "height": {
                "value": 160
              },
              "fontSize": {
                "value": 16
              },
              "fontStyle": {
                "value": "normal"
              },
              "fontFamily": {
                "value": "courier"
              },
              "strokeEnabled": {
                "value": true
              },
              "strokeColor": {
                "value": "#efefefff"
              },
              "strokeWidth": {
                "value": 40
              },
              "cornerRadius": {
                "value": 2
              }
            },
            "status": "configured"
          },
          "position": {
            "x": 214,
            "y": 10
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        }
      ],
      "edges": [
        {
          "data": {
            "id": "akdz2q5qg2",
            "source": "b4j5so66yk",
            "target": "k0u00birhq"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "besdm72uqq",
            "source": "szv1jn92pp",
            "target": "styuwybm32"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "pp4o6702j6",
            "source": "svevg8moqy",
            "target": "ot3calmmy8"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "ff5baqrr8d",
            "source": "9rcnye22sw",
            "target": "svevg8moqy"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "rk8tjxxd4i",
            "source": "qt6i45kia9",
            "target": "pcwpf5r10m"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "agetg25v2v",
            "source": "2qfot2ewcg",
            "target": "b7lkx23gph"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "7ylpe8d0kj",
            "source": "2rw3u3cvas",
            "target": "lxu6e5g4bh"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "b9vf0e8sos",
            "source": "qniixfhqyf",
            "target": "yurcyd8bmy"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "4c1524n1vs",
            "source": "uw42ft9tuv",
            "target": "8568khaoyw"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "ti5h5nl6h",
            "source": "tc7d03kha7",
            "target": "z52f4ypnvz",
            "multiValueSourceId": "888yeo8ej3"
          },
          "position": {
            "x": 64,
            "y": 52
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "6u3dy4t9gw",
            "source": "qf6vrdpxcd",
            "target": "pbg49y9dah"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "exlu5djdlo",
            "source": "tnyarew933",
            "target": "9giwe44a7k"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "i69eqirp4q",
            "source": "tljqjelpt1",
            "target": "p7cu17te75"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "398f7w13yd",
            "source": "hjb3z1f5em",
            "target": "3lc72ezybg"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "1zj9uxhphy",
            "source": "le8cvzegey",
            "target": "1ibeeco9jv"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "qktewo5jxw",
            "source": "svevg8moqy",
            "target": "cvw8btes5x"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "p3hhk2svpq",
            "source": "sv7hekpw5m",
            "target": "tljqjelpt1"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "jimftuddga",
            "source": "o96ndv0e6s",
            "target": "b4j5so66yk"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "n08fkq1sxw",
            "source": "9d4y1ikofr",
            "target": "x85m46k6x9"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "1im4hcutpk",
            "source": "yurcyd8bmy",
            "target": "2qfot2ewcg"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "wiq6iohlsz",
            "source": "cllf2xf9xs",
            "target": "uw42ft9tuv"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "82r4158byn",
            "source": "45z37ua6jf",
            "target": "r80e1t6i9x"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "mt9dudgvg4",
            "source": "pbg49y9dah",
            "target": "8ol4te4pgb"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "n7yjmnyccn",
            "source": "r80e1t6i9x",
            "target": "wmlrskt0xx"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "rz38vvvt0f",
            "source": "q0j8p1c21o",
            "target": "2rw3u3cvas"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "m9e8g3rd5v",
            "source": "59ok678xlg",
            "target": "26qdnhh3ze"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "spaq8lc996",
            "source": "rvp5w0bzvj",
            "target": "dvhkx4ades"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "g8u6jnix0c",
            "source": "9giwe44a7k",
            "target": "qf6vrdpxcd"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "yg76r5vqly",
            "source": "szv1jn92pp",
            "target": "0onbzymzwb"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "nxbxrp3zda",
            "source": "1ibeeco9jv",
            "target": "hjb3z1f5em"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "jyy0p00ejy",
            "source": "griqdv1n01",
            "target": "3dbv9i2260"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "lddx92d0rj",
            "source": "p7cu17te75",
            "target": "l4yb09wiac"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "mj0k0qu7bg",
            "source": "3lc72ezybg",
            "target": "sv7hekpw5m"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "kasgtozy5c",
            "source": "fwepxtly85",
            "target": "cllf2xf9xs"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "1dk2fl9h9o",
            "source": "k0britcz1g",
            "target": "9rcnye22sw"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "pflanyc2q6",
            "source": "jqwp06o8gw",
            "target": "fwepxtly85"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "km79emjj0t",
            "source": "tc7d03kha7",
            "target": "q0j8p1c21o",
            "multiValueSourceId": "n2smfzia9s"
          },
          "position": {
            "x": 64,
            "y": 132
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "xprxcjuae",
            "source": "jqwp06o8gw",
            "target": "qt6i45kia9"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "mavxg4yb4c",
            "source": "dvhkx4ades",
            "target": "cc4etq8uhs"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "z1wf7z75g2",
            "source": "lxu6e5g4bh",
            "target": "negqi501z5"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "5anyb7r2ya",
            "source": "z52f4ypnvz",
            "target": "26qdnhh3ze"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "hmmo7z9a6m",
            "source": "tc7d03kha7",
            "target": "9d4y1ikofr",
            "multiValueSourceId": "-1"
          },
          "position": {
            "x": 64,
            "y": 172
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "6p1olglzrw",
            "source": "26qdnhh3ze",
            "target": "jqwp06o8gw"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "fwipxs2pa8",
            "source": "jbp3kxtqba",
            "target": "yxrhgftbq7"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "qyv2trlllo",
            "source": "pbg49y9dah",
            "target": "03ae0yar5u"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "muk73tluye",
            "source": "b4j5so66yk",
            "target": "ky5gtbz1ua"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "pove795nx7",
            "source": "pcwpf5r10m",
            "target": "o96ndv0e6s"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "xdypd5thz3",
            "source": "cc4etq8uhs",
            "target": "szv1jn92pp"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "jpg18oc478",
            "source": "ky5gtbz1ua",
            "target": "k0britcz1g"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "n6lyomw7bi",
            "source": "tc7d03kha7",
            "target": "59ok678xlg",
            "multiValueSourceId": "c5fct8d1a9"
          },
          "position": {
            "x": 64,
            "y": 92
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "53z91bdof5",
            "source": "8568khaoyw",
            "target": "h6jfnu44ff"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "m8q07jgfzv",
            "source": "h6jfnu44ff",
            "target": "jbp3kxtqba"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "j7vggfnw5y",
            "source": "jbp3kxtqba",
            "target": "le8cvzegey"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "mkraruyh0n",
            "source": "l4yb09wiac",
            "target": "culhnlat6p"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "35gjwv9sjc",
            "source": "culhnlat6p",
            "target": "griqdv1n01"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "wzedyqp6ic",
            "source": "griqdv1n01",
            "target": "tnyarew933"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "43jal2ne3n",
            "source": "b7lkx23gph",
            "target": "r46ptxwi6c"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "8l4jg5adtb",
            "source": "r46ptxwi6c",
            "target": "icnbv6umm9"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "qsfy5l87dc",
            "source": "icnbv6umm9",
            "target": "5us6oscy01"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "uoni24ffxq",
            "source": "icnbv6umm9",
            "target": "75n4cddp6c"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        }
      ]
    },
    "data": {},
    "zoomingEnabled": true,
    "userZoomingEnabled": true,
    "zoom": 1,
    "minZoom": 1e-50,
    "maxZoom": 1e+50,
    "panningEnabled": true,
    "userPanningEnabled": true,
    "pan": {
      "x": 0,
      "y": 0
    },
    "boxSelectionEnabled": true,
    "renderer": {
      "name": "null"
    }
  },
  "inputSchema": [
    {
      "propertyName": "deviceAuthNId",
      "description": "Device AuthN ID",
      "preferredDataType": "string",
      "preferredControlType": "textField",
      "isExpanded": true,
      "required": true
    },
    {
      "propertyName": "publicKeyCredentialRequestOptions",
      "description": "Public Key Credential Request Options",
      "preferredDataType": "string",
      "preferredControlType": "textField",
      "isExpanded": true,
      "required": true
    },
    {
      "propertyName": "fidoDevice",
      "description": "FIDO Device",
      "preferredDataType": "object",
      "preferredControlType": "textField",
      "isExpanded": true,
      "required": true
    }
  ],
  "flowColor": "#E3F0FF",
  "savedDate": 1671630462391
}